@model List<Domain.Models.OTPSetting>
@{
    ViewData["Title"] = "OTP Setting";
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="card shadow-sm">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <h5 class="mb-0 text-muted">
                    <i class="fas fa-shield-alt me-2"></i>OTP Setting
                </h5>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="updateWithEF()">
                        <i class="fas fa-save me-1"></i>Update (EF)
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-success" onclick="updateWithSQL()">
                        <i class="fas fa-database me-1"></i>Update (SQL)
                    </button>
                </div>
            </div>
            <div class="card-body p-4">
                <form id="otpForm">
                    @Html.AntiForgeryToken()
                    <div class="table-responsive">
                        <table class="table table-borderless">
                            <thead>
                                <tr class="border-bottom">
                                    <th class="text-muted fw-normal">Action</th>
                                    <th class="text-center text-muted fw-normal">Channel Type</th>
                                </tr>
                                <tr>
                                    <th></th>
                                    <th class="text-center">
                                        <div class="row">
                                            <div class="col-6 text-center">
                                                <small class="text-muted">Email</small>
                                            </div>
                                            <div class="col-6 text-center">
                                                <small class="text-muted">Whatsapp</small>
                                            </div>
                                        </div>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Count; i++)
                                {
                                    <tr class="border-bottom">
                                        <td class="align-middle py-3">
                                            <input type="hidden" name="[@i].OTPId" value="@Model[i].OTPId" />
                                            <input type="hidden" name="[@i].OTPAction" value="@Model[i].OTPAction" />
                                            <span class="text-muted">@Model[i].OTPAction</span>
                                        </td>
                                        <td class="align-middle py-3">
                                            <div class="row">
                                                <div class="col-6 text-center">
                                                    <div class="form-check d-inline-block">
                                                        <input type="checkbox"
                                                               name="[@i].Email"
                                                               value="true"
                                                               @(Model[i].Email ? "checked" : "")
                                                               class="form-check-input"
                                                               style="transform: scale(1.2);">
                                                        <input type="hidden" name="[@i].Email" value="false" />
                                                    </div>
                                                </div>
                                                <div class="col-6 text-center">
                                                    <div class="form-check d-inline-block">
                                                        <input type="checkbox"
                                                               name="[@i].Whatsapp"
                                                               value="true"
                                                               @(Model[i].Whatsapp ? "checked" : "")
                                                               class="form-check-input"
                                                               style="transform: scale(1.2);">
                                                        <input type="hidden" name="[@i].Whatsapp" value="false" />
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="mt-4 d-flex justify-content-between align-items-center">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            Choose your preferred update method above
                        </small>
                        <button type="button" class="btn btn-outline-secondary" onclick="refreshSettings()">
                            <i class="fas fa-refresh me-1"></i>Refresh
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function updateWithEF() {
        submitForm('@Url.Action("Update", "OTPSetting")');
    }

    function updateWithSQL() {
        submitForm('@Url.Action("UpdateWithSQL", "OTPSetting")');
    }

    function submitForm(actionUrl) {
        const form = document.getElementById('otpForm');
        form.action = actionUrl;
        form.method = 'POST';
        form.submit();
    }

    function refreshSettings() {
        window.location.reload();
    }

    // Auto-dismiss toasts after 5 seconds
    document.addEventListener('DOMContentLoaded', function() {
        const toasts = document.querySelectorAll('.toast');
        toasts.forEach(function(toast) {
            setTimeout(function() {
                toast.style.display = 'none';
            }, 5000);
        });
    });
</script>